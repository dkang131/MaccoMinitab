macro

t_two_test x y alpha mu0
mconstant alpha mu0 n1 n2 xbar ybar s1 s2 a b c sp df t alpha1 ttab p pvalue BB BA i d s
mcolumn x y

let n1 = count(x)
let n2 = count(y)
let xbar = mean(x)
let ybar = mean(y)

#hitung stdev x
let b = 0
do i = 1:n1
let b = b+(x(i)-xbar)^2
enddo
let s1 = sqrt(b/(n1-1))
print s1

#hitung stdev y
let c = 0
do i = 1:n2
let c = c+(y(i)-ybar)^2
enddo
let s2 = sqrt(c/(n2-1))
print s2

note jika varian dianggap sama
let a = ((n1-1)*(s1*s1))+((n2-1)*(s2*s2))
let df = (n1+n2-2)
let sp = sqrt(a/df)
print sp
let s = sp*(sqrt((1/n1)+(1/n2)))
let t = ((xbar-ybar)-mu0)/s

note Hipotesis:
note H0 : m1-m2 = 0
note H1 : m1-m2 <> 0

#ttab
let alpha1 = 1-(alpha/2)
invcdf alpha1 ttab;
T df.
print t ttab

if abs(t) > ttab
note Reject H0. m1-m2 not equal 0
else
note Fail to Reject H0. m1-m2 equal 0
endif

#p-value
let t = abs(t)
cdf t p;
T df.
let pvalue = 2*(1-p)
print pvalue alpha

if (pvalue < alpha)
note Reject H0. m1-m2 not equal 0
else
note Fail to Reject H0. m1-m2 equal 0
endif

#CI
let d = xbar-ybar
let BB = d-(ttab*s)
let BA = d+(ttab*s)
print BB BA

if mu0>BA or mu0<BB
note Reject H0. m1-m2 not equal 0
else
note Fail to Reject H0. m1-m2 equal 0
endif

endmacro